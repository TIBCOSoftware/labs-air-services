{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/log",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/TIBCOSoftware/labs-air-contrib/function/air",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/accumulator",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/graphbuilder/builder",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/graphbuilder/dgraphupsert",
        "github.com/TIBCOSoftware/labs-air-contrib/trigger/mqtt",
        "github.com/TIBCOSoftware/labs-lightcrane-contrib/activity/httpclient",
        "github.com/TIBCOSoftware/labs-lightcrane-contrib/activity/mapping",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/contrib/function/array",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/coerce"
    ],
    "name": "IoTData_MQTT_Dgraph",
    "description": "",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "triggers": [
		{
			"id": "MQTTSubscriber",
			"name": "mqtt-trigger",
            "description": "Subscribe to an MQTT topic",
			"ref": "github.com/TIBCOSoftware/labs-air-contrib/trigger/mqtt",
			"settings": {
				"broker" : "=$property[\"Mqtt.IoTMQTT.Broker_URL\"]",
				"id": "=$property[\"Mqtt.IoTMQTT.ID\"]",
				"keepAlive": 30,
				"store": ":memory:",
				"autoReconnect": true,
				"cleanSession": true,
				"username": "=$property[\"Mqtt.IoTMQTT.Username\"]",
				"password": "=$property[\"Mqtt.IoTMQTT.Password\"]"
			},
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "topic": "=$property[\"MQTTTrigger.Topic\"]",
                        "qos": "=$property[\"MQTTTrigger.MaximumQOS\"]",
                        "deserializer": "JSON"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ProcessSensorReadingsGateway"
                        },
                        "input": {
                            "topic": "=$.topic",
                            "body": "=$.content"
                        }
                    },
                    "name": "ProcessSensorReadingsGateway"
                }
            ]
		}
    ],
    "resources": [
        {
            "id": "flow:ProcessSensorReadingsGateway",
            "data": {
                "name": "ProcessSensorReadingsGateway",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "ProcessReading",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "=$property[\"Logging.LogLevel\"]",
                                "flowInfo": false,
                                "message": "=coerce.toString($flow.body)"
                            }
                        }
                    },
                    {
                        "id": "ProcessReading",
                        "name": "ProcessReading",
                        "description": "Simple SubFlow Activity",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$flow.body.readings",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:AggregateAndSave"
                            },
                            "input": {
                                "id": "=$flow.body.id",
                                "pushed": "=$flow.body.pushed",
                                "device": "=$flow.body.device",
                                "created": "=$flow.body.created",
                                "modified": "=$flow.body.modified",
                                "origin": "=$flow.body.origin",
                                "gateway": "=$flow.body.gateway",
                                "reading": {
                                    "mapping": {
                                        "id": "=$iteration[value].id",
                                        "pushed": "=$iteration[value].pushed",
                                        "created": "=$iteration[value].created",
                                        "origin": "=$iteration[value].origin",
                                        "modified": "=$iteration[value].modified",
                                        "deviceName": "=$iteration[value].deviceName",
                                        "resourceName": "=$iteration[value].resourceName",
                                        "value": "=$iteration[value].value",
                                        "objectValue": "=$iteration[value].objectValue",
                                        "binaryValue": "=$iteration[value].binaryValue",
                                        "valueType": "=$iteration[value].valueType"
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "topic",
                            "type": "string"
                        },
                        {
                            "name": "retained",
                            "type": "boolean"
                        },
                        {
                            "name": "qos",
                            "type": "integer"
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"created\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"schedule\":{\"type\":\"null\"},\"event\":{\"type\":\"null\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"deviceName\":{\"type\":\"string\"},\"resourceName\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"objectValue\":{\"type\":\"string\"},\"binaryValue\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "output": []
                }
            }
        },
        {
            "id": "flow:AggregateAndSave",
            "data": {
                "name": "AggregateAndSave",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogSingleReading",
                        "to": "MappingValue",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "MappingValue",
                        "to": "AccumulatorSimple",
                        "type": "expression",
                        "label": "MappingValuetoAccumulatorSimple",
                        "value": "\"Dgraph\" == $property[\"DataStore.API\"]"
                    },
                    {
                        "id": 3,
                        "from": "AccumulatorSimple",
                        "to": "BuildGraph",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "BuildGraph",
                        "to": "DgraphUpsertSimple",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "DgraphUpsertSimple",
                        "to": "ReturnSimple",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "MappingValue",
                        "to": "AccumulatorSimple2",
                        "type": "exprOtherwise",
                        "label": "MappingValuetoHTTPClient"
                    },
                    {
                        "id": 7,
                        "from": "AccumulatorSimple2",
                        "to": "HTTPClient",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "HTTPClient",
                        "to": "ReturnSimple2",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogSingleReading",
                        "name": "LogSingleReading",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"Processing single reading for: \" + $flow.reading.deviceName + \"---\" + $flow.reading.resourceName"
                            }
                        }
                    },
                    {
                        "id": "MappingValue",
                        "name": "MappingValue",
                        "description": "Mapping field from input to output",
                        "activity": {
                            "ref": "#mapping",
                            "settings": {
                                "IsArray": false,
                                "MappingFields": "[{\"Name\":\"Value\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "Value": "=air.airdataselector($flow.gateway, $flow.reading, null, array.get(array.create(\"@f1..objectValue@\", \"@f1..binaryValue@\", \"@f1..value@\"),air.airfirsttrue($flow.reading, air.json2object(\"[{\\\"valueType\\\":\\\"Object\\\"}, {\\\"valueType\\\":\\\"Binary\\\"}]\"))))"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "AccumulatorSimple",
                        "name": "AccumulatorSimple",
                        "description": "Accumulate tuple then release them as a batch",
                        "activity": {
                            "ref": "#accumulator",
                            "settings": {
                                "ArrayMode": false,
                                "WindowSize": 1,
                                "DataFields": "[{\"Name\":\"id\",\"Type\":\"String\"},{\"Name\":\"deviceName\",\"Type\":\"String\"},{\"Name\":\"origin\",\"Type\":\"Long\"},{\"Name\":\"resourceName\",\"Type\":\"String\"},{\"Name\":\"value\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Input": {
                                    "mapping": {
                                        "id": "=$flow.reading.id",
                                        "deviceName": "=$flow.reading.deviceName",
                                        "origin": "=$flow.reading.origin",
                                        "resourceName": "=$flow.reading.resourceName",
                                        "valueType": "=$flow.reading.valueType",
                                        "value": "=string.endsWith($flow.reading.resourceName, \"Inferred\") ? air.tobase64string($flow.reading.value):air.ternary(\"Object\"==$flow.reading.valueType, air.object2json($activity[MappingValue].Data.Value), $activity[MappingValue].Data.Value)"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "BuildGraph",
                        "name": "BuildGraph",
                        "description": "This activity build graph from incoming data",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[AccumulatorSimple].Output",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#builder",
                            "settings": {
                                "GraphModel": {
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-graph",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Graph",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/labs-air-contrib/connector/graph",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Graph Name",
                                                "description": "Name of the graph"
                                            },
                                            "value": "IoTGraph"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Graph description"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "modelSource",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Model Source",
                                                "description": "Where the model stored",
                                                "type": "string"
                                            },
                                            "allowed": [
                                                "Local File",
                                                "TGDB"
                                            ],
                                            "value": "Local File"
                                        },
                                        {
                                            "name": "url",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Model Server URL",
                                                "description": "URL to the model server, ex. http://localhost:9999/tgdb/metadata",
                                                "type": "string",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "model",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Graph Model",
                                                "description": "Define nodes and entities for a graph",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".tgbm",
                                                    ".json"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": {
                                                "filename": "IotModel2.json",
                                                "content": "data:application/json;base64,ewoJIm5vZGVzIjogWwoJCXsKCQkJIm5hbWUiOiAicmVhZGluZyIsCgkJCSJrZXkiOiBbCgkJCQkidXVpZCIKCQkJXSwKCQkJImF0dHJpYnV0ZXMiOiBbCgkJCQl7CgkJCQkJIm5hbWUiOiAidXVpZCIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJyZWFkaW5nIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInZhbHVlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImNyZWF0ZWQiLAoJCQkJCSJ0eXBlIjogIkxvbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInR5cGUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0KCQkJXQoJCX0sCgkJewoJCQkibmFtZSI6ICJyZXNvdXJjZSIsCgkJCSJrZXkiOiBbCgkJCQkidXVpZCIKCQkJXSwKCQkJImF0dHJpYnV0ZXMiOiBbCgkJCQl7CgkJCQkJIm5hbWUiOiAidXVpZCIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJyZXNvdXJjZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJuYW1lIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInR5cGUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidmFsdWVUeXBlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9CgkJCV0KCQl9LAoJCXsKCQkJIm5hbWUiOiAiZGV2aWNlIiwKCQkJImtleSI6IFsKCQkJCSJ1dWlkIgoJCQldLAoJCQkiYXR0cmlidXRlcyI6IFsKCQkJCXsKCQkJCQkibmFtZSI6ICJ1dWlkIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImRldmljZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJuYW1lIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogIm9wZXJhdGluZ1N0YXRlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImFkbWluU3RhdGUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAiZGVzY3JpcHRpb24iLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidHlwZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfQoJCQldCgkJfSwKCQl7CgkJCSJuYW1lIjogImdhdGV3YXkiLAoJCQkia2V5IjogWwoJCQkJInV1aWQiCgkJCV0sCgkJCSJhdHRyaWJ1dGVzIjogWwoJCQkJewoJCQkJCSJuYW1lIjogImRncmFwaC50eXBlIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJnYXRld2F5IiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImFjY2Vzc1Rva2VuIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInVzZXJuYW1lIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInBsYXRmb3JtIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImFkZHJlc3MiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAicm91dGVyIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInJvdXRlclBvcnQiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAiZGVwbG95TmV0d29yayIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ1dWlkIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImRlc2NyaXB0aW9uIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImRldmljZXNNZXRhZGF0YSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJsYXRpdHVkZSIsCgkJCQkJInR5cGUiOiAiRG91YmxlIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJsb25naXR1ZGUiLAoJCQkJCSJ0eXBlIjogIkRvdWJsZSIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAiY3JlYXRlZHRzIiwKCQkJCQkidHlwZSI6ICJMb25nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ1cGRhdGVkdHMiLAoJCQkJCSJ0eXBlIjogIkxvbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInR5cGUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0KCQkJXQoJCX0KCV0sCgkiZWRnZXMiOiBbCgkJewoJCQkidG8iOiAiZGV2aWNlIiwKCQkJIm5hbWUiOiAiZ2F0ZXdheV9kZXZpY2UiLAoJCQkiZnJvbSI6ICJnYXRld2F5IiwKCQkJImRpcmVjdGlvbiI6IDIKCQl9LAoJCXsKCQkJInRvIjogInJlc291cmNlIiwKCQkJIm5hbWUiOiAiZGV2aWNlX3Jlc291cmNlIiwKCQkJImZyb20iOiAiZGV2aWNlIiwKCQkJImRpcmVjdGlvbiI6IDIKCQl9LAoJCXsKCQkJInRvIjogInJlYWRpbmciLAoJCQkibmFtZSI6ICJyZXNvdXJjZV9yZWFkaW5nIiwKCQkJImZyb20iOiAicmVzb3VyY2UiLAoJCQkiZGlyZWN0aW9uIjogMgoJCX0KCV0KfQ=="
                                            }
                                        },
                                        {
                                            "name": "metadata",
                                            "type": "string",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": "{\n\t\"nodes\": [\n\t\t{\n\t\t\t\"name\": \"reading\",\n\t\t\t\"key\": [\n\t\t\t\t\"uuid\"\n\t\t\t],\n\t\t\t\"attributes\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"uuid\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"reading\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"created\",\n\t\t\t\t\t\"type\": \"Long\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"resource\",\n\t\t\t\"key\": [\n\t\t\t\t\"uuid\"\n\t\t\t],\n\t\t\t\"attributes\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"uuid\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"resource\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"valueType\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"device\",\n\t\t\t\"key\": [\n\t\t\t\t\"uuid\"\n\t\t\t],\n\t\t\t\"attributes\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"uuid\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"device\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"operatingState\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"adminState\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"description\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"gateway\",\n\t\t\t\"key\": [\n\t\t\t\t\"uuid\"\n\t\t\t],\n\t\t\t\"attributes\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"dgraph.type\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"gateway\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"accessToken\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"username\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"platform\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"address\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"router\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"routerPort\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"deployNetwork\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"uuid\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"description\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"devicesMetadata\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"latitude\",\n\t\t\t\t\t\"type\": \"Double\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"longitude\",\n\t\t\t\t\t\"type\": \"Double\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"createdts\",\n\t\t\t\t\t\"type\": \"Long\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"updatedts\",\n\t\t\t\t\t\"type\": \"Long\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"edges\": [\n\t\t{\n\t\t\t\"to\": \"device\",\n\t\t\t\"name\": \"gateway_device\",\n\t\t\t\"from\": \"gateway\",\n\t\t\t\"direction\": 2\n\t\t},\n\t\t{\n\t\t\t\"to\": \"resource\",\n\t\t\t\"name\": \"device_resource\",\n\t\t\t\"from\": \"device\",\n\t\t\t\"direction\": 2\n\t\t},\n\t\t{\n\t\t\t\"to\": \"reading\",\n\t\t\t\"name\": \"resource_reading\",\n\t\t\t\"from\": \"resource\",\n\t\t\t\"direction\": 2\n\t\t}\n\t]\n}"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder/connector/graph/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder",
                                        "visible": true,
                                        "smallIcon": "graph.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1622575570687,
                                    "createdTime": 1622575570687,
                                    "user": "flogo",
                                    "subscriptionId": "flogo_sbsc",
                                    "id": "38a03000-c30f-11eb-9b35-53ae34097570",
                                    "connectorName": "IoTGraph",
                                    "connectorDescription": " "
                                },
                                "AllowNullKey": false,
                                "BatchMode": false,
                                "PassThrough": "",
                                "Multiinstances": ""
                            },
                            "input": {
                                "Nodes": {
                                    "mapping": {
                                        "reading": {
                                            "uuid": "=$iteration[value].id",
                                            "reading": "reading",
                                            "value": "=air.ternary(\"Binary\"==$iteration[value].valueType||\"Object\"==$iteration[value].valueType, air.tobase64string($iteration[value].value), $iteration[value].value)",
                                            "created": "=air.epoch2ms($iteration[value].origin)",
                                            "type": "reading"
                                        },
                                        "resource": {
                                            "uuid": "=string.concat($iteration[value].deviceName, \"_\", $iteration[value].resourceName)",
                                            "resource": "resource",
                                            "name": "=$iteration[value].resourceName",
                                            "type": "resource",
                                            "valueType": "=$iteration[value].valueType"
                                        },
                                        "device": {
                                            "uuid": "=$iteration[value].deviceName",
                                            "device": "device",
                                            "name": "=$iteration[value].deviceName",
                                            "type": "device"
                                        },
                                        "gateway": {
                                            "dgraph.type": "Gateway",
                                            "gateway": "gateway",
                                            "uuid": "=$flow.gateway",
                                            "type": "gateway"
                                        }
                                    }
                                },
                                "Edges": {
                                    "mapping": {
                                        "gateway_device": {
                                            "vertices": {
                                                "from": "=$flow.gateway",
                                                "to": "=$iteration[value].deviceName"
                                            }
                                        },
                                        "device_resource": {
                                            "vertices": {
                                                "from": "=$iteration[value].deviceName",
                                                "to": "=$iteration[value].resourceName"
                                            }
                                        },
                                        "resource_reading": {
                                            "vertices": {
                                                "from": "=$iteration[value].resourceName",
                                                "to": "=$iteration[value].id"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "DgraphUpsertSimple",
                        "name": "DgraphUpsertSimple",
                        "description": "This activity upsert to Dgraph",
                        "activity": {
                            "ref": "#dgraphupsert",
                            "settings": {
                                "dgraphConnection": {
                                    "id": "1be74d80-5403-11ea-a293-73298142a997",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-dgraph",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Dgraph Connector",
                                    "description": "This is Dgraph connector",
                                    "ref": "github.com/TIBCOSoftware/labs-air-contrib/connector/dgraph",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "description": "Name of the connection"
                                            },
                                            "value": "IoTDgraph"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Connection description"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "apiVersion",
                                            "type": "string",
                                            "required": true,
                                            "allowed": [
                                                "v200"
                                            ],
                                            "display": {
                                                "name": "API Version",
                                                "description": "Dgraph dgo API Version",
                                                "type": "string"
                                            },
                                            "value": "v200"
                                        },
                                        {
                                            "name": "url",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Dgraph Server URL",
                                                "description": "Dgraph server URL ex. localhost:9080",
                                                "type": "string",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"DataStore.Server_URL\"]"
                                        },
                                        {
                                            "name": "tlsEnabled",
                                            "type": "boolean",
                                            "display": {
                                                "name": "TLS Enabled",
                                                "description": "Will use tls connection"
                                            },
                                            "value": false,
                                            "required": true
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "display": {
                                                "name": "Username",
                                                "description": "Username for login to Dgraph server",
                                                "type": "string",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": "=$property[\"DataStore.Username\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "description": "Password for login to Dgraph server",
                                                "type": "password",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": "=$property[\"DataStore.Password\"]"
                                        },
                                        {
                                            "name": "tls",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "TLS Configuration",
                                                "description": "Configuration file for TLS",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".json"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": "=$property[\"DataStore.TLS\"]"
                                        },
                                        {
                                            "name": "schemaGen",
                                            "type": "string",
                                            "display": {
                                                "name": "Schema Generation",
                                                "description": "How to generate schema"
                                            },
                                            "value": "no",
                                            "allowed": [
                                                "default",
                                                "file",
                                                "no"
                                            ],
                                            "required": true
                                        },
                                        {
                                            "name": "schema",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Graph Schema",
                                                "description": "Define schema for queries",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".dschema"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": {
                                                "filename": "IotSchema.dschema",
                                                "content": "data:application/octet-stream;base64,ewogICAidXVpZCIgOiB7CiAgICAgICAidHlwZSIgIDogInN0cmluZyIgICwKICAgICAgICJpbmRleCIgOiBbImV4YWN0IiwgInRlcm0iXQogICB9LAogICAidXJsIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAibGF0aXR1ZGUiIDogewogICAgICAgInR5cGUiICA6ICJmbG9hdCIKICAgfSwKICAgImxvbmdpdHVkZSIgOiB7CiAgICAgICAidHlwZSIgIDogImZsb2F0IgogICB9LAogICAiY3JlYXRlZHRzIiA6IHsKICAgICAgICJ0eXBlIiAgOiAiZGF0ZVRpbWUiCiAgIH0sCiAgICJ1cGRhdGVkdHMiIDogewogICAgICAgInR5cGUiICA6ICJkYXRlVGltZSIKICAgfSwKICAgIm5hbWUiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJvcGVydGluZ1N0YXRlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiYWRtaW5TdGF0ZSIgOiB7CiAgICAgICAidHlwZSIgIDogInN0cmluZyIKICAgfSwKICAgImRlc2NyaXB0aW9uIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAidmFsdWUiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJjcmVhdGVkIiA6IHsKICAgICAgICJ0eXBlIiAgOiAiaW50IiwKICAgICAgICJpbmRleCIgOiBbImludCJdCiAgIH0sCiAgICJnYXRld2F5IiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiZGV2aWNlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAicmVzb3VyY2UiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJyZWFkaW5nIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiZ2F0ZXdheV9kZXZpY2UiIDogewogICAgICAgInR5cGUiICA6ICJ1aWQiICwKICAgICAgICJleHRyYUZsYWdzIiA6IFsicmV2ZXJzZSIsICJjb3VudCJdCiAgIH0sCiAgICJkZXZpY2VfcmVzb3VyY2UiIDogewogICAgICAgInR5cGUiICA6ICJ1aWQiICwKICAgICAgICJleHRyYUZsYWdzIiA6IFsicmV2ZXJzZSIsICJjb3VudCJdCiAgIH0sCiAgICJyZXNvdXJjZV9yZWFkaW5nIiA6IHsKICAgICAgICJ0eXBlIiAgOiAidWlkIiAsCiAgICAgICAiZXh0cmFGbGFncyIgOiBbInJldmVyc2UiLCAiY291bnQiXQogICB9LAogICAiZ2F0ZXdheV9ydWxlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAidWlkIiAsCiAgICAgICAiZXh0cmFGbGFncyIgOiBbInJldmVyc2UiLCAiY291bnQiXQogICB9Cn0="
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_dgraph/connector/dgraph/connector.json",
                                    "display": {
                                        "description": "This is Dgraph connector",
                                        "category": "GraphBuilder_dgraph",
                                        "visible": true,
                                        "smallIcon": "dgraph.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1583852319243,
                                    "user": "flogo",
                                    "connectorName": "IoTDgraph",
                                    "connectorDescription": " "
                                },
                                "cacheSize": 200,
                                "readableExternalId": true,
                                "explicitType": true,
                                "typeTag": "type",
                                "attrWithPrefix": false
                            },
                            "input": {
                                "Graph": "=$activity[BuildGraph].Graph"
                            }
                        }
                    },
                    {
                        "id": "ReturnSimple",
                        "name": "ReturnSimple",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "AccumulatorSimple2",
                        "name": "AccumulatorSimple2",
                        "description": "Accumulate tuple then release them as a batch",
                        "activity": {
                            "ref": "#accumulator",
                            "settings": {
                                "ArrayMode": false,
                                "MarkLast":false,
                                "WindowSize": 1,
                                "DataFields": "[{\"Name\":\"timestamp\",\"Type\":\"Long\"},{\"Name\":\"value\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Input": {
                                    "mapping": {
                                        "value": "=string.endsWith($flow.reading.name, \"Inferred\") ? string.stringToBase64($flow.reading.value):$activity[MappingValue].Data.Value",
                                        "timestamp": "=$flow.reading.origin"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "HTTPClient",
                        "name": "HTTPClient",
                        "description": "This activity build docker image from Dockerfile",
                        "activity": {
                            "ref": "#httpclient",
                            "settings": {
                                "method": "GET",
                                "timeout": "1500",
                                "urlMappingString": "[]",
                                "urlMapping": "[]",
                                "leftToken": "$",
                                "rightToken": "$",
                                "variablesDef": "",
                                "httpHeaders": ""
                            },
                            "input": {
                                "URL": "=air.airdataselector($flow.gateway, $flow.reading, $flow.enriched, $property[\"DataStore.Server_URL\"])",
                                "Method": "=$property[\"DataStore.Request_Method\"]",
                                "Headers": "=$property[\"DataStore.Request_Headers\"]",
                                "Body": "=air.object2json($activity[AccumulatorSimple2].Output)",
                                "SkipCondition": "=false"
                            },
                            "schemas": {
                                "input": {
                                    "Variables": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                                        "fe_metadata": "{}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "ReturnSimple2",
                        "name": "ReturnSimple2",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "pushed",
                            "type": "float64"
                        },
                        {
                            "name": "device",
                            "type": "string"
                        },
                        {
                            "name": "created",
                            "type": "float64"
                        },
                        {
                            "name": "modified",
                            "type": "float64"
                        },
                        {
                            "name": "origin",
                            "type": "float64"
                        },
                        {
                            "name": "schedule",
                            "type": "string"
                        },
                        {
                            "name": "event",
                            "type": "string"
                        },
                        {
                            "name": "gateway",
                            "type": "string"
                        },
                        {
                            "name": "reading",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"deviceName\":{\"type\":\"string\"},\"resourceName\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"objectValue\":{\"type\":\"string\"},\"binaryValue\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": []
                }
            }
        }
    ],
    "properties": [
        {
            "name": "Mqtt.IoTMQTT.Broker_URL",
            "type": "string",
            "value": "<please set broker URL>"
        },
        {
            "name": "Mqtt.IoTMQTT.ID",
            "type": "string",
            "value": "<please set unique ID>"
        },
        {
            "name": "Mqtt.IoTMQTT.Username",
            "type": "string",
            "value": "mqtt_admin"
        },
        {
            "name": "Mqtt.IoTMQTT.Password",
            "type": "string",
            "value": "<please set mqtt password>"
        },
        {
            "name": "DataStore.API",
            "type": "string",
            "value": "REST"
        },
        {
            "name": "DataStore.Server_URL",
            "type": "string",
            "value": "<please set dgraph server URL>"
        },
        {
            "name": "DataStore.Username",
            "type": "string",
            "value": "admin"
        },
        {
            "name": "DataStore.Password",
            "type": "string",
            "value": ""
        },
        {
            "name": "DataStore.TLS",
            "type": "string",
            "value": ""
        },
        {
            "name": "DataStore.Request_Body",
            "type": "string",
            "value": "[{\"value\": \"200\",\"timestamp\": 1234567890}]"
        },
        {
            "name": "DataStore.Request_Method",
            "type": "string",
            "value": "POST"
        },
        {
            "name": "DataStore.Request_Headers",
            "type": "string",
            "value": "[{\"Key\":\"Accept\",\"Value\":\"application/json\"},{\"Key\":\"Content-Type\",\"Value\":\"application/json-patch+json\"}]"
        },
        {
            "name": "MQTTTrigger.Topic",
            "type": "string",
            "value": "EdgexGatewayData"
        },
        {
            "name": "MQTTTrigger.MaximumQOS",
            "type": "float64",
            "value": 2
        },
        {
            "name": "Filtering.DeviceNames",
            "type": "string",
            "value": " "
        },
        {
            "name": "Logging.LogLevel",
            "type": "string",
            "value": "DEBUG"
        },
        {
            "name": "Streaming.DeviceName",
            "type": "string",
            "value": " "
        },
        {
            "name": "Streaming.InstrumentName",
            "type": "string",
            "value": " "
        },
        {
            "name": "Streaming.Function",
            "type": "string",
            "value": "avg"
        },
        {
            "name": "Streaming.WindowType",
            "type": "string",
            "value": "tumbling"
        },
        {
            "name": "Streaming.WindowSize",
            "type": "float64",
            "value": 5
        }
    ],
    "connections": {}
}